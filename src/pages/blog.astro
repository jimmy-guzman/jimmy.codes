---
import { getCollection } from "astro:content";

import Layout from "../layouts/Layout.astro";
import { formatDate, getReadingTime } from "../utils/md";

const posts = (await getCollection("posts"))
  .sort((a, b) => b.data.publishDate.getTime() - a.data.publishDate.getTime())
  .map((post) => {
    return {
      ...post,
      readingTime: getReadingTime(post.body),
    };
  });

const description =
  "Articles on the craft of building software, architecture, system design, code, and developer experience.";
---

<Layout
  title="jimmy.codes | Blog"
  description={description}
  keywords={[
    "jimmy guzman blog",
    "technical articles",
    "scalable systems",
    "developer experience",
    "engineering leadership",
    "typescript",
    "react",
    "nextjs",
    "astro",
    "web development",
    "software architecture",
    "mentorship",
  ]}
>
  <main
    class="flex-1 mx-auto w-full max-w-3xl px-4 py-12 space-y-8 flex flex-col items-start"
  >
    <section class="prose xl:prose-lg">
      <h1>Blog</h1>
      <blockquote class="not-italic text-base-content/80">
        {description}
      </blockquote>
      <div class="not-prose">
        <ul class="flex flex-col gap-y-4">
          {
            posts.map((post) => (
              <li class="space-y-0.5">
                <a
                  href={`/blog/${post.slug}`}
                  class="link link-hover font-medium"
                  data-astro-prefetch
                >
                  {post.data.title}
                </a>
                <span class="block text-sm text-base-content/60">
                  <time datetime={post.data.publishDate.toISOString()}>
                    {formatDate(post.data.publishDate)}
                  </time>
                  {post.data.updatedDate && (
                    <>
                      {" "}
                      •
                      <time datetime={post.data.updatedDate.toISOString()}>
                        Updated {formatDate(post.data.updatedDate)}
                      </time>
                    </>
                  )}
                  • <span>{post.readingTime} Min Read</span>
                </span>
              </li>
            ))
          }
        </ul>
      </div>
    </section>
  </main>
</Layout>
