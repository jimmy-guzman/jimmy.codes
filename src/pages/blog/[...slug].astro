---
import { getCollection, render } from "astro:content";

import { BASE_TITLE } from "@/configs/pages";
import BaseLayout from "@/layouts/BaseLayout.astro";
import ContentLayout from "@/layouts/ContentLayout.astro";
import PageLayout from "@/layouts/PageLayout.astro";
import { lastModified, readingTime } from "@/utils/content";
import { shortTitle } from "@/utils/post";
import { getRelatedByTags } from "@/utils/related";

export async function getStaticPaths() {
  const posts = await getCollection("posts");

  return posts.map((post) => {
    const updatedDate =
      post.data.updatedDate ??
      (post.filePath ? lastModified(post.filePath) : undefined);

    const relatedPosts = getRelatedByTags(posts, post);

    return {
      params: { slug: post.slug },
      props: {
        post,
        updatedDate,
        relatedPosts,
      },
    };
  });
}

const { post, relatedPosts, updatedDate } = Astro.props;
const { Content } = await render(post);
---

<BaseLayout
  title={`${post.data.title} | ${BASE_TITLE}`}
  description={post.data.description}
  keywords={post.data.keywords}
>
  <PageLayout heading={shortTitle(post)}>
    <ContentLayout
      tags={post.data.tags}
      publishDate={post.data.publishDate}
      updatedDate={updatedDate}
      back={{
        href: "/blog",
        label: "Back to all posts",
      }}
      minutes={readingTime(post.body)}
      filePath={post.filePath}
      relatedPosts={relatedPosts}
    >
      <Content />
    </ContentLayout>
  </PageLayout>
</BaseLayout>
