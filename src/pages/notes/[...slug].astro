---
import { Image } from "astro:assets";
import { getCollection, render } from "astro:content";

import Layout from "../../layouts/Layout.astro";

export async function getStaticPaths() {
  const notes = await getCollection("notes");

  return notes.map((note) => ({
    params: { slug: note.slug },
    props: { note },
  }));
}

const { note } = Astro.props;

const { Content } = await render(note);

const dateFormatter = new Intl.DateTimeFormat("en-US", {
  year: "numeric",
  month: "long",
  day: "numeric",
});

const formattedPublishDate = dateFormatter.format(note.data.publishDate);

const formattedUpdatedDate = note.data.updatedDate
  ? dateFormatter.format(note.data.updatedDate)
  : null;
---

<Layout
  title={`jimmy.codes | ${note.data.title}`}
  description={note.data.description}
  keywords={note.data.keywords}
>
  <main class="mx-auto w-full max-w-3xl px-4 py-12 space-y-8">
    <section class="prose xl:prose-lg">
      <header>
        <h1>{note.data.title}</h1>
        <blockquote class="not-italic text-base-content/80">
          {note.data.description}
        </blockquote>
        <p class="text-sm">
          <time datetime={note.data.publishDate.toISOString()}
            >{formattedPublishDate}</time
          >
          {
            note.data.updatedDate && (
              <>
                {" "}
                •
                <time datetime={note.data.updatedDate.toISOString()}>
                  Updated {formattedUpdatedDate}
                </time>
              </>
            )
          }
        </p>
      </header>

      <div class="divider"></div>

      <article>
        <Content />
      </article>

      <p>Thank you for reading ❤️</p>

      <div class="divider"></div>

      <div class="flex flex-wrap gap-2">
        {
          note.data.keywords.map((keyword) => (
            <span class="badge">{keyword.trim()}</span>
          ))
        }
      </div>

      <p>
        <a href="/blog">← Back to all notes</a>
      </p>
    </section>
  </main>
</Layout>
